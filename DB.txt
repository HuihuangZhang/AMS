create table if not exists ams_assistant (
id varchar(8) not null primary key,
name varchar(20) not null default 'anonymous',
passwd varchar(32) not null,
email varchar(20) not null default 'xxx@xxx.com',
phone varchar(11) default 0,
did tinyInt(4) not null,
foreign key(did) references ams_department(id) on delete cascade on update cascade
)engine=innodb default charset=utf8;

create table if not exists ams_manager (
id varchar(8) not null primary key,
name varchar(20) not null default 'anonymous',
passwd varchar(32) not null,
email varchar(20) not null default 'xxx@xxx.com',
phone varchar(11) default 0
)engine=innodb default charset=utf8;


create table if not exists ams_free_time (
id int(11) not null primary key auto_increment,
aid varchar(8) not null,
stime varchar(4) not null default '0000',
etime varchar(4) not null default '0000',
weekday varchar(1) not null default 1,
foreign key(aid) references ams_assistant(id) on delete cascade on update cascade
)engine=innodb default charset=utf8;

create table if not exists ams_schedule (
id int(11) not null primary key auto_increment,
aid varchar(8) not null,
stime varchar(4) not null default '0000',
etime varchar(4) not null default '0000',
weekday varchar(1) not null default '1',
unique (stime, etime, weekday),
foreign key(aid) references ams_assistant(id) on delete cascade on update cascade
)engine=innodb default charset=utf8;

create table if not exists ams_check_in_out_info (
sid int(11) not null,
aid varchar(8) not null,
date varchar(8) not null default '00000000',
bias int(11) not null default 0,
unique (sid, date),
foreign key(sid) references ams_schedule(id) on delete cascade on update cascade,
foreign key(aid) references ams_assistant(id) on delete cascade on update cascade
)engine=innodb default charset=utf8;

create table if not exists ams_counting_time (
id int(11) not null primary key auto_increment,
mid varchar(8) not null,
time varchar(8) not null default '00000000',
foreign key(mid) references ams_manager(id) on delete cascade on update cascade
)engine=innodb default charset=utf8;

create table if not exists ams_work_hour (
aid varchar(8) not null,
time varchar(8) not null default '00000000',
lel_time tinyInt(4) not null default 0,
lel_work_hour FLOAT(4,2) not null default 0.0,
work_hour FLOAT(4,2) not null default 0.0,
foreign key(aid) references ams_assistant(id) on delete cascade on update cascade
)engine=innodb default charset=utf8;

create table if not exists ams_manage (
aid varchar(8) default null,
did tinyInt(4) not null,
mid varchar(8) not null,
foreign key(aid) references ams_assistant(id) on delete cascade on update cascade,
foreign key(mid) references ams_manager(id) on delete cascade on update cascade,
foreign key(did) references ams_department(id) on delete cascade on update cascade
)engine=innodb default charset=utf8;

create table if not exists ams_department (
id tinyInt(4) not null primary key auto_increment,
name varchar(64) not null
)engine=innodb default charset=utf8;

SELECT tempa.aid, * FROM m_department tempm
INNER JOIN a_department tempa
ON tempm.did = tempa.did
WHERE tempm.mid = '$mid'


查询工时SQL：
SELECT Tempa.id AS aid, Tempa.name AS name, Tempa.email, Tempa.phone, Temps.stime, Temps.etime, Tempc.bias, Tempa.did
FROM ((
        SELECT aid, id, stime, etime
        FROM ams_schedule 
        WHERE aid in
            (
            SELECT aid
            FROM ams_manage 
            WHERE ams_manage.mid = '$mid'
            )
        ) AS Temps 
        INNER JOIN (
            SELECT sid, bias 
            FROM ams_check_in_out_info 
            WHERE date > '$last_counting_time' AND EXISTS 
                (
                    SELECT * 
                    FROM ams_manage 
                    WHERE ams_manage.mid = '$mid' AND ams_check_in_out_info.aid = ams_manage.aid
                )
        ) AS Tempc ON Temps.id = Tempc.sid
        INNER JOIN ams_assistant AS Tempa ON Temps.aid = Tempa.id
)

列出管理员管辖的所有助理的信息SQL:
SELECT a.id, a.name AS name, a.phone, a.email, d.name AS department
FROM ams_assistant a
INNER JOIN ams_department d ON a.did = d.id
INNER JOIN ams_manage m ON a.id = m.aid
WHERE m.mid = '$mid'


测试用：
insert into ams_ () values ();
select * from ams_assistant
insert into ams_check_in_out_info (sid, aid, date, bias) values (1, 12341336, '20130343', -4);

SELECT DISTINCT m.did, p.name
FROM ams_manage m
INNER JOIN ams_department p ON p.id = m.did
WHERE mid = '$mid'

